#!/usr/bin/env python

import XenAPI
import XenAPIPlugin
import sys
import base64
import subprocess
path = "/opt/tpm/"
#Usage: %s  [-c saltfile ] aiktpmblob quotefile\n";
cfile   = path + "saltfile"
aikblob = path + "aiktpmblob"
outfile = path + "outquote"
prg 	= path + "xenquote"

def doexec(args, inputtext=None):
    """Execute a subprocess, then return its return code, stdout and stderr"""
    proc = subprocess.Popen(args,stdin=subprocess.PIPE,stdout=subprocess.PIPE,stderr=subprocess.PIPE,close_fds=True)
    (stdout,stderr) = proc.communicate(inputtext)
    rc = proc.returncode
    return (rc,stdout,stderr)

def call_exec():
    (rc,stdout,stderr) = doexec([prg, aikblob,outfile])
    return rc

error_code =  { 'unknown': 'Error happend in challange response ',\
                prg:   'Error in generating quote' }



def main(session, args):
    try:
        rc = call_exec()
        f = open(outfile,"r")
        rc = base64.b64encode(f.read())
        f.close()
        return rc
    except :
        return error_code[prg]

if __name__ == "__main__":
    XenAPIPlugin.dispatch({"main":main})
    #main(None,None)
